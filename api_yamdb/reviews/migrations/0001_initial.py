# Generated by Django 3.2 on 2023-03-10 17:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(db_index=True, max_length=200, verbose_name='Категория')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': ('Категория',),
                'verbose_name_plural': ('Категории',),
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата добавления')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(db_index=True, max_length=100, verbose_name='Жанр')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': ('Жанр',),
                'verbose_name_plural': ('Жанры',),
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GenreTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Соответствие жанра и произведения',
                'verbose_name_plural': 'Таблица соответствия жанров и произведений',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('score', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0, message='Значение должно находиться в диапазоне [0:10]'), django.core.validators.MaxValueValidator(10, message='Значение должно находиться в диапазоне [0:10]')])),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата добавления')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Введите название произведения', max_length=200, verbose_name='Название произведения')),
                ('year', models.PositiveIntegerField(db_index=True, help_text='Введите возможный год издания произведения', validators=[django.core.validators.MinValueValidator(0, message='Введённое значение не может быть отрицательным'), django.core.validators.MaxValueValidator(2023, message='Введённое значение не может быть больше текущего года')], verbose_name='Год издания')),
                ('description', models.TextField(blank=True, verbose_name='Описание произведения')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='reviews.category', verbose_name='Категория')),
                ('genre', models.ManyToManyField(to='reviews.Genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': ('Произведение',),
                'verbose_name_plural': ('Произведения',),
                'ordering': ['-year', 'name'],
            },
        ),
    ]
